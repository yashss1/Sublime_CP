//YashS
#include <bits/stdc++.h>
using namespace std;
#define test              int T;cin>>T;while(T--)
#define int               long long
#define pb                push_back
#define all(x)            (x).begin(),(x).end()
#define rep(i,a,b)        for(int i=a;i<b;i++)
#define pVec(v)           for(auto e:v)cout<<e<<" ";cout<<"\n"
int MOD = 1e9 + 7;
int N = 1e5 + 7;

void init_code() {
#ifndef ONLINE_JUDGE
	freopen("inputf.txt", "r", stdin);
	freopen("outputf.txt", "w", stdout);
#endif // ONLINE_JUDGE
}

void yash()
{
	int n, m;
	cin >> n >> m;
	MOD = m;

	vector<int> dp(n + 1, 0);
	dp[1] = 1;
	int sum = 3;
	dp[2] = 2;
	for (int i = 3; i <= n; i++) {
		// for shift type 1
		dp[i] += sum;
		dp[i] %= MOD;

		// cout << "\n\n\n" << i << '\n';
		// cout << "init " << dp[i] << '\n';

		// for shift type 2
		// for (int j = 2; j < (int)floor(sqrt(i)); j++) {
		// 	int t = (i / j);
		// 	dp[i] += (dp[t]);
		// 	dp[i] %= MOD;
		// 	// cout << "HERe " << dp[t] << "\n";
		// }
		for (int j = 1; j <= sqrt(i); j++) {
			int a = (i / (j)), b = (i / (j + 1));
			// cout << i << " -> " << a << " " << b << " | " << ((a - b) * (dp[b])) << '\n';
			// cout << "a-b " << (a - b) << '\n';
			if ((i / a) == 0) {
				break;
			}
			// cout << "dp[b] " << dp[i / a] << '\n';
			dp[i] += (((a - b + MOD) % MOD) * (dp[j] % MOD));
			dp[i] %= MOD;

			if (b > sqrt(i)) {
				dp[i] += dp[b];
				dp[i] %= MOD;
			}
		}

		sum += dp[i];
		sum %= MOD;
	}
	cout << dp[n] << "\n";
	// pVec(dp);

	// map<int, int> mp;
	// int x = 1000;
	// for (int i = x; i >= 2; i--) {
	// 	int t = x / i;
	// 	cout << i << " = " << t << '\n';
	// 	mp[t]++;
	// }

	// cout << mp.size() << '\n';
	// for (auto it : mp) {
	// 	cout << it.first << " " << it.second << '\n';
	// }

	// 51 -> 100 = 1
	// 34 -> 49 = 2
	// 26 -> 33 = 3
	// 21 -> 25 = 4
	// 17 -> 20 = 5
	// 15 -> 16 = 6
	// 13 -> 14 = 7
	// 12 = 8
	// 11 = 9
	// 10 = 10
	// 9 = 11
	// 8 = 12
	// 7 = 14
	// 6 = 16
	// 5 = 20
	// 4 = 25
	// 3 = 33
	// 2 = 50


	// int prev = 0;
	// for (int i = 2; i < 10; i++) {
	// 	int t = x / i;
	// 	prev = abs(t - prev);
	// 	cout << i  << " " << t << " " <<  prev << "\n";
	// }
}

signed main()
{
	init_code();
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	// test
	yash();
	return 0;
}

/*
1000 = 1
999 = 1
998 = 1
997 = 1
996 = 1
995 = 1
994 = 1
993 = 1
992 = 1
991 = 1
990 = 1
989 = 1
988 = 1
987 = 1
986 = 1
985 = 1
984 = 1
983 = 1
982 = 1
981 = 1
980 = 1
979 = 1
978 = 1
977 = 1
976 = 1
975 = 1
974 = 1
973 = 1
972 = 1
971 = 1
970 = 1
969 = 1
968 = 1
967 = 1
966 = 1
965 = 1
964 = 1
963 = 1
962 = 1
961 = 1
960 = 1
959 = 1
958 = 1
957 = 1
956 = 1
955 = 1
954 = 1
953 = 1
952 = 1
951 = 1
950 = 1
949 = 1
948 = 1
947 = 1
946 = 1
945 = 1
944 = 1
943 = 1
942 = 1
941 = 1
940 = 1
939 = 1
938 = 1
937 = 1
936 = 1
935 = 1
934 = 1
933 = 1
932 = 1
931 = 1
930 = 1
929 = 1
928 = 1
927 = 1
926 = 1
925 = 1
924 = 1
923 = 1
922 = 1
921 = 1
920 = 1
919 = 1
918 = 1
917 = 1
916 = 1
915 = 1
914 = 1
913 = 1
912 = 1
911 = 1
910 = 1
909 = 1
908 = 1
907 = 1
906 = 1
905 = 1
904 = 1
903 = 1
902 = 1
901 = 1
900 = 1
899 = 1
898 = 1
897 = 1
896 = 1
895 = 1
894 = 1
893 = 1
892 = 1
891 = 1
890 = 1
889 = 1
888 = 1
887 = 1
886 = 1
885 = 1
884 = 1
883 = 1
882 = 1
881 = 1
880 = 1
879 = 1
878 = 1
877 = 1
876 = 1
875 = 1
874 = 1
873 = 1
872 = 1
871 = 1
870 = 1
869 = 1
868 = 1
867 = 1
866 = 1
865 = 1
864 = 1
863 = 1
862 = 1
861 = 1
860 = 1
859 = 1
858 = 1
857 = 1
856 = 1
855 = 1
854 = 1
853 = 1
852 = 1
851 = 1
850 = 1
849 = 1
848 = 1
847 = 1
846 = 1
845 = 1
844 = 1
843 = 1
842 = 1
841 = 1
840 = 1
839 = 1
838 = 1
837 = 1
836 = 1
835 = 1
834 = 1
833 = 1
832 = 1
831 = 1
830 = 1
829 = 1
828 = 1
827 = 1
826 = 1
825 = 1
824 = 1
823 = 1
822 = 1
821 = 1
820 = 1
819 = 1
818 = 1
817 = 1
816 = 1
815 = 1
814 = 1
813 = 1
812 = 1
811 = 1
810 = 1
809 = 1
808 = 1
807 = 1
806 = 1
805 = 1
804 = 1
803 = 1
802 = 1
801 = 1
800 = 1
799 = 1
798 = 1
797 = 1
796 = 1
795 = 1
794 = 1
793 = 1
792 = 1
791 = 1
790 = 1
789 = 1
788 = 1
787 = 1
786 = 1
785 = 1
784 = 1
783 = 1
782 = 1
781 = 1
780 = 1
779 = 1
778 = 1
777 = 1
776 = 1
775 = 1
774 = 1
773 = 1
772 = 1
771 = 1
770 = 1
769 = 1
768 = 1
767 = 1
766 = 1
765 = 1
764 = 1
763 = 1
762 = 1
761 = 1
760 = 1
759 = 1
758 = 1
757 = 1
756 = 1
755 = 1
754 = 1
753 = 1
752 = 1
751 = 1
750 = 1
749 = 1
748 = 1
747 = 1
746 = 1
745 = 1
744 = 1
743 = 1
742 = 1
741 = 1
740 = 1
739 = 1
738 = 1
737 = 1
736 = 1
735 = 1
734 = 1
733 = 1
732 = 1
731 = 1
730 = 1
729 = 1
728 = 1
727 = 1
726 = 1
725 = 1
724 = 1
723 = 1
722 = 1
721 = 1
720 = 1
719 = 1
718 = 1
717 = 1
716 = 1
715 = 1
714 = 1
713 = 1
712 = 1
711 = 1
710 = 1
709 = 1
708 = 1
707 = 1
706 = 1
705 = 1
704 = 1
703 = 1
702 = 1
701 = 1
700 = 1
699 = 1
698 = 1
697 = 1
696 = 1
695 = 1
694 = 1
693 = 1
692 = 1
691 = 1
690 = 1
689 = 1
688 = 1
687 = 1
686 = 1
685 = 1
684 = 1
683 = 1
682 = 1
681 = 1
680 = 1
679 = 1
678 = 1
677 = 1
676 = 1
675 = 1
674 = 1
673 = 1
672 = 1
671 = 1
670 = 1
669 = 1
668 = 1
667 = 1
666 = 1
665 = 1
664 = 1
663 = 1
662 = 1
661 = 1
660 = 1
659 = 1
658 = 1
657 = 1
656 = 1
655 = 1
654 = 1
653 = 1
652 = 1
651 = 1
650 = 1
649 = 1
648 = 1
647 = 1
646 = 1
645 = 1
644 = 1
643 = 1
642 = 1
641 = 1
640 = 1
639 = 1
638 = 1
637 = 1
636 = 1
635 = 1
634 = 1
633 = 1
632 = 1
631 = 1
630 = 1
629 = 1
628 = 1
627 = 1
626 = 1
625 = 1
624 = 1
623 = 1
622 = 1
621 = 1
620 = 1
619 = 1
618 = 1
617 = 1
616 = 1
615 = 1
614 = 1
613 = 1
612 = 1
611 = 1
610 = 1
609 = 1
608 = 1
607 = 1
606 = 1
605 = 1
604 = 1
603 = 1
602 = 1
601 = 1
600 = 1
599 = 1
598 = 1
597 = 1
596 = 1
595 = 1
594 = 1
593 = 1
592 = 1
591 = 1
590 = 1
589 = 1
588 = 1
587 = 1
586 = 1
585 = 1
584 = 1
583 = 1
582 = 1
581 = 1
580 = 1
579 = 1
578 = 1
577 = 1
576 = 1
575 = 1
574 = 1
573 = 1
572 = 1
571 = 1
570 = 1
569 = 1
568 = 1
567 = 1
566 = 1
565 = 1
564 = 1
563 = 1
562 = 1
561 = 1
560 = 1
559 = 1
558 = 1
557 = 1
556 = 1
555 = 1
554 = 1
553 = 1
552 = 1
551 = 1
550 = 1
549 = 1
548 = 1
547 = 1
546 = 1
545 = 1
544 = 1
543 = 1
542 = 1
541 = 1
540 = 1
539 = 1
538 = 1
537 = 1
536 = 1
535 = 1
534 = 1
533 = 1
532 = 1
531 = 1
530 = 1
529 = 1
528 = 1
527 = 1
526 = 1
525 = 1
524 = 1
523 = 1
522 = 1
521 = 1
520 = 1
519 = 1
518 = 1
517 = 1
516 = 1
515 = 1
514 = 1
513 = 1
512 = 1
511 = 1
510 = 1
509 = 1
508 = 1
507 = 1
506 = 1
505 = 1
504 = 1
503 = 1
502 = 1
501 = 1
500 = 2
499 = 2
498 = 2
497 = 2
496 = 2
495 = 2
494 = 2
493 = 2
492 = 2
491 = 2
490 = 2
489 = 2
488 = 2
487 = 2
486 = 2
485 = 2
484 = 2
483 = 2
482 = 2
481 = 2
480 = 2
479 = 2
478 = 2
477 = 2
476 = 2
475 = 2
474 = 2
473 = 2
472 = 2
471 = 2
470 = 2
469 = 2
468 = 2
467 = 2
466 = 2
465 = 2
464 = 2
463 = 2
462 = 2
461 = 2
460 = 2
459 = 2
458 = 2
457 = 2
456 = 2
455 = 2
454 = 2
453 = 2
452 = 2
451 = 2
450 = 2
449 = 2
448 = 2
447 = 2
446 = 2
445 = 2
444 = 2
443 = 2
442 = 2
441 = 2
440 = 2
439 = 2
438 = 2
437 = 2
436 = 2
435 = 2
434 = 2
433 = 2
432 = 2
431 = 2
430 = 2
429 = 2
428 = 2
427 = 2
426 = 2
425 = 2
424 = 2
423 = 2
422 = 2
421 = 2
420 = 2
419 = 2
418 = 2
417 = 2
416 = 2
415 = 2
414 = 2
413 = 2
412 = 2
411 = 2
410 = 2
409 = 2
408 = 2
407 = 2
406 = 2
405 = 2
404 = 2
403 = 2
402 = 2
401 = 2
400 = 2
399 = 2
398 = 2
397 = 2
396 = 2
395 = 2
394 = 2
393 = 2
392 = 2
391 = 2
390 = 2
389 = 2
388 = 2
387 = 2
386 = 2
385 = 2
384 = 2
383 = 2
382 = 2
381 = 2
380 = 2
379 = 2
378 = 2
377 = 2
376 = 2
375 = 2
374 = 2
373 = 2
372 = 2
371 = 2
370 = 2
369 = 2
368 = 2
367 = 2
366 = 2
365 = 2
364 = 2
363 = 2
362 = 2
361 = 2
360 = 2
359 = 2
358 = 2
357 = 2
356 = 2
355 = 2
354 = 2
353 = 2
352 = 2
351 = 2
350 = 2
349 = 2
348 = 2
347 = 2
346 = 2
345 = 2
344 = 2
343 = 2
342 = 2
341 = 2
340 = 2
339 = 2
338 = 2
337 = 2
336 = 2
335 = 2
334 = 2
333 = 3
332 = 3
331 = 3
330 = 3
329 = 3
328 = 3
327 = 3
326 = 3
325 = 3
324 = 3
323 = 3
322 = 3
321 = 3
320 = 3
319 = 3
318 = 3
317 = 3
316 = 3
315 = 3
314 = 3
313 = 3
312 = 3
311 = 3
310 = 3
309 = 3
308 = 3
307 = 3
306 = 3
305 = 3
304 = 3
303 = 3
302 = 3
301 = 3
300 = 3
299 = 3
298 = 3
297 = 3
296 = 3
295 = 3
294 = 3
293 = 3
292 = 3
291 = 3
290 = 3
289 = 3
288 = 3
287 = 3
286 = 3
285 = 3
284 = 3
283 = 3
282 = 3
281 = 3
280 = 3
279 = 3
278 = 3
277 = 3
276 = 3
275 = 3
274 = 3
273 = 3
272 = 3
271 = 3
270 = 3
269 = 3
268 = 3
267 = 3
266 = 3
265 = 3
264 = 3
263 = 3
262 = 3
261 = 3
260 = 3
259 = 3
258 = 3
257 = 3
256 = 3
255 = 3
254 = 3
253 = 3
252 = 3
251 = 3
250 = 4
249 = 4
248 = 4
247 = 4
246 = 4
245 = 4
244 = 4
243 = 4
242 = 4
241 = 4
240 = 4
239 = 4
238 = 4
237 = 4
236 = 4
235 = 4
234 = 4
233 = 4
232 = 4
231 = 4
230 = 4
229 = 4
228 = 4
227 = 4
226 = 4
225 = 4
224 = 4
223 = 4
222 = 4
221 = 4
220 = 4
219 = 4
218 = 4
217 = 4
216 = 4
215 = 4
214 = 4
213 = 4
212 = 4
211 = 4
210 = 4
209 = 4
208 = 4
207 = 4
206 = 4
205 = 4
204 = 4
203 = 4
202 = 4
201 = 4
200 = 5
199 = 5
198 = 5
197 = 5
196 = 5
195 = 5
194 = 5
193 = 5
192 = 5
191 = 5
190 = 5
189 = 5
188 = 5
187 = 5
186 = 5
185 = 5
184 = 5
183 = 5
182 = 5
181 = 5
180 = 5
179 = 5
178 = 5
177 = 5
176 = 5
175 = 5
174 = 5
173 = 5
172 = 5
171 = 5
170 = 5
169 = 5
168 = 5
167 = 5
166 = 6
165 = 6
164 = 6
163 = 6
162 = 6
161 = 6
160 = 6
159 = 6
158 = 6
157 = 6
156 = 6
155 = 6
154 = 6
153 = 6
152 = 6
151 = 6
150 = 6
149 = 6
148 = 6
147 = 6
146 = 6
145 = 6
144 = 6
143 = 6
142 = 7
141 = 7
140 = 7
139 = 7
138 = 7
137 = 7
136 = 7
135 = 7
134 = 7
133 = 7
132 = 7
131 = 7
130 = 7
129 = 7
128 = 7
127 = 7
126 = 7
125 = 8
124 = 8
123 = 8
122 = 8
121 = 8
120 = 8
119 = 8
118 = 8
117 = 8
116 = 8
115 = 8
114 = 8
113 = 8
112 = 8
111 = 9
110 = 9
109 = 9
108 = 9
107 = 9
106 = 9
105 = 9
104 = 9
103 = 9
102 = 9
101 = 9
100 = 10
99 = 10
98 = 10
97 = 10
96 = 10
95 = 10
94 = 10
93 = 10
92 = 10
91 = 10
90 = 11
89 = 11
88 = 11
87 = 11
86 = 11
85 = 11
84 = 11
83 = 12
82 = 12
81 = 12
80 = 12
79 = 12
78 = 12
77 = 12
76 = 13
75 = 13
74 = 13
73 = 13
72 = 13
71 = 14
70 = 14
69 = 14
68 = 14
67 = 14
66 = 15
65 = 15
64 = 15
63 = 15
62 = 16
61 = 16
60 = 16
59 = 16
58 = 17
57 = 17
56 = 17
55 = 18
54 = 18
53 = 18
52 = 19
51 = 19
50 = 20
49 = 20
48 = 20
47 = 21
46 = 21
45 = 22
44 = 22
43 = 23
42 = 23
41 = 24
40 = 25
39 = 25
38 = 26
37 = 27
36 = 27
35 = 28
34 = 29
33 = 30
32 = 31
31 = 32
30 = 33
29 = 34
28 = 35
27 = 37
26 = 38
25 = 40
24 = 41
23 = 43
22 = 45
21 = 47
20 = 50
19 = 52
18 = 55
17 = 58
16 = 62
15 = 66
14 = 71
13 = 76
12 = 83
11 = 90
10 = 100
9 = 111
8 = 125
7 = 142
6 = 166
5 = 200
4 = 250
3 = 333
2 = 500

*/